{"version":3,"sources":["services/getTrends.jsx","views/HomeView.js","components/Button/Button.module.css","functions/cutGenres.js","components/Loader/Loader.jsx","components/Button/Button.jsx","components/MovieList/MovieList.module.css","components/MovieItem/MovieItem.module.css","components/MoviePreview/MoviePreview.jsx","functions/decodeGenres.js","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx"],"names":["axios","defaults","baseURL","params","api_key","language","include_adult","getTrends","page","a","get","data","console","log","error","HomeView","state","trends","currentPage","totalPages","fetchTrends","then","setState","prevState","results","total_pages","catch","finally","isLoading","loadMore","localStorage","setItem","JSON","stringify","this","genresList","props","className","length","MovieList","movies","Button","onClick","Component","defaultProps","module","exports","cutGenres","genres","mapedGenres","map","name","slicedMapedGenres","slice","push","join","Load","type","color","height","width","timeout","window","scrollTo","top","document","documentElement","scrollHeight","behavior","styles","buttonLoad","MoviePreview","poster","title","release","filmsGalleryItemPoster","src","alt","filmsGalleryItemTitle","toUpperCase","split","filmsGalleryItemGenres","withRouter","decodeGenres","genresIds","allGenres","filteredGenres","filter","genre","includes","id","MovieItem","to","pathname","from","location","item","release_date","poster_path","genre_ids"],"mappings":"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","file":"static/js/home-view.1ca284c8.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ffddee44025dd24685ea61d637d56d24';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  include_adult: 'false',\n};\n\nconst getTrends = async page => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: { page },\n    });\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport default getTrends;\n\n//     `http://api.themoviedb.org/3/trending/movie/day?api_key=ffddee44025dd24685ea61d637d56d24&language=en-US&include_adult=false&page=1`,\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Load from '../components/Loader';\nimport Button from '../components/Button';\nimport MovieList from '../components/MovieList';\nimport getTrends from '../services/getTrends';\n\nclass HomeView extends Component {\n  state = {\n    trends: [],\n    currentPage: 1,\n    totalPages: 1,\n    error: null,\n  };\n\n  static defaultProps = {\n    genresList: [],\n  };\n\n  static propTypes = {\n    genresList: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n      }),\n    ),\n  };\n\n  componentDidMount() {\n    this.fetchTrends();\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   const stateInLocalStorage = getLocalStorage('savedState');\n  //   if (prevState.currentPage !== stateInLocalStorage.currentPage) {\n  //     this.fetchTrends();\n  //   }\n  // }\n\n  fetchTrends = () => {\n    const { currentPage } = this.state;\n    getTrends(currentPage)\n      .then(trends => {\n        this.setState(prevState => ({\n          trends: [...prevState.trends, ...trends.results],\n          totalPages: trends.total_pages,\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => this.setState({ error: error }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  loadMore = () => {\n    this.fetchTrends();\n    localStorage.setItem(`savedState`, JSON.stringify(this.state));\n  };\n\n  render() {\n    const { trends, isLoading, currentPage, totalPages } = this.state;\n    const { genresList } = this.props;\n    // console.log(trends);\n    return (\n      <div className=\"HomeView\">\n        <h1 className=\"HomeView-title\">Trending today</h1>\n        {trends.length > 0 ? (\n          <MovieList movies={trends} genresList={genresList} />\n        ) : null}\n        {isLoading && <Load />}\n        {totalPages > 1 && currentPage < totalPages && !isLoading && (\n          <Button onClick={this.loadMore} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default HomeView;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonLoad\":\"Button_buttonLoad__3AieG\"};","function cutGenres(genres) {\n  const mapedGenres = genres.map(({ name }) => name);\n  // console.log('mapedGenres: ', mapedGenres);\n\n  let slicedMapedGenres = [];\n\n  if (mapedGenres.length < 3) {\n    slicedMapedGenres = mapedGenres;\n  } else {\n    slicedMapedGenres = mapedGenres.slice(0, 2);\n    slicedMapedGenres.push('Other');\n  }\n\n  return slicedMapedGenres.join(', ');\n}\n\nexport default cutGenres;\n","import React, { Component } from 'react';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nclass Load extends Component {\n  render() {\n    return (\n      <Loader\n        type=\"Circles\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        timeout={3000}\n      />\n    );\n  }\n}\n\nexport default Load;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Button.module.css';\n\nclass Button extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n  };\n\n  render() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n    const { onClick } = this.props;\n    return (\n      <button type=\"button\" className={styles.buttonLoad} onClick={onClick}>\n        Load more\n      </button>\n    );\n  }\n}\nexport default Button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieList\":\"MovieList_MovieList__1FSgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieItem\":\"MovieItem_MovieItem__1dVZ3\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport styles from './MoviePreview.module.css';\n\nclass MoviePreview extends Component {\n  static defaultProps = {\n    title: '',\n    release: '',\n    poster: '',\n    genres: '',\n  };\n\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    release: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const { poster, title, genres, release } = this.props;\n    return (\n      <>\n        <img\n          className={styles.filmsGalleryItemPoster}\n          src={`https://image.tmdb.org/t/p/w500${poster}`}\n          alt={title}\n        />\n        <p className={styles.filmsGalleryItemTitle}>\n          {title.toUpperCase()} {release && `(${release.split('-')[0]})`}\n        </p>\n        <p className={styles.filmsGalleryItemGenres}>{genres}</p>\n      </>\n    );\n  }\n}\n\nexport default withRouter(MoviePreview);\n","import cutGenres from '../functions/cutGenres';\n\nfunction decodeGenres(genresIds, allGenres) {\n  // console.log(allGenres);\n  // console.log(genresIds);\n\n  const filteredGenres = allGenres.filter(genre =>\n    genresIds.includes(genre.id),\n  );\n  // console.log('filteredGenres: ', filteredGenres);\n\n  return cutGenres(filteredGenres);\n}\n\nexport default decodeGenres;\n","import React, { Component } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './MovieItem.module.css';\n\nimport MoviePreview from '../MoviePreview';\nimport decodeGenres from '../../functions/decodeGenres';\n\nclass MovieItem extends Component {\n  static defaultProps = {\n    genresList: [],\n    id: '',\n    title: '',\n    release: '',\n    poster: '',\n    genresIds: '',\n  };\n\n  static propTypes = {\n    genresList: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n      }),\n    ),\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    release: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genresIds: PropTypes.array.isRequired,\n  };\n\n  render() {\n    const { id, poster, title, genresIds, release, genresList } = this.props;\n    const genres = decodeGenres(genresIds, genresList);\n\n    return (\n      <li key={id} className={styles.MovieItem}>\n        <NavLink\n          to={{\n            pathname: `/movies/${id}`,\n            state: { from: this.props.location },\n          }}\n        >\n          <MoviePreview\n            poster={poster}\n            title={title}\n            genres={genres}\n            release={release}\n          />\n        </NavLink>\n      </li>\n    );\n  }\n}\n\nexport default withRouter(MovieItem);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport styles from './MovieList.module.css';\nimport MovieItem from '../MovieItem';\n\nclass MovieList extends Component {\n  static defaultProps = {\n    genresList: [],\n    movies: [],\n  };\n\n  static propTypes = {\n    genresList: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n      }),\n    ),\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        release: PropTypes.string.isRequired,\n        poster: PropTypes.string.isRequired,\n        genresIds: PropTypes.array.isRequired,\n      }),\n    ),\n  };\n\n  render() {\n    const { movies } = this.props;\n    const { genresList } = this.props;\n    // console.log(trends);\n    // console.log(genresList);\n    return (\n      <ul className={styles.MovieList}>\n        {movies.map(item => (\n          <MovieItem\n            key={item.id}\n            id={item.id}\n            title={item.title}\n            release={item.release_date}\n            poster={item.poster_path}\n            genresIds={item.genre_ids}\n            genresList={genresList}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default withRouter(MovieList);\n"],"sourceRoot":""}