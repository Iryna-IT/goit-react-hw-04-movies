{"version":3,"sources":["views/views.module.css","components/MovieCast/MovieCast.module.css","components/MovieReviews/MovieReviews.module.css","services/getMovieCast.jsx","components/MovieCast/MovieCast.jsx","services/getMovieReviews.jsx","components/MovieReviews/MovieReviews.jsx","services/getMovieDetails.jsx","views/MovieDetailsView.js","components/Button/Button.module.css","functions/cutGenres.js","components/Loader/Loader.jsx","components/Button/Button.jsx"],"names":["module","exports","axios","defaults","baseURL","params","api_key","language","getMovieCast","id","a","get","data","cast","console","log","error","MovieCast","state","movieId","this","props","setState","className","styles","movieCastList","map","item","movieCastItem","movieCastItemName","original_name","movieCastItemProfile","src","profile_path","alt","cast_id","Component","withRouter","getMovieReviews","page","MovieReviews","reviews","currentPage","totalPages","isLoading","fetchMovieReviews","options","then","prevState","results","total_pages","catch","finally","length","movieReviewsList","movieReviewsItem","movieReviewsItemAuthor","author","movieReviewsItemContent","content","Button","onClick","fetchMovieReview","getMovieDetails","MovieDetailsView","poster","title","release","userScores","overview","genres","handleGoBack","location","history","push","from","routes","movies","match","movieDetails","poster_path","release_date","vote_average","split","cutGenres","type","buttonGoBack","movieMainInfo","moviePoster","movieInfo","movieInfoRelease","movieInfoHeading","movieInfoHeadingValue","movieInfoAditionanal","to","pathname","movieInfoAditionanalHeading","activeClassName","active","path","render","defaultProps","genresList","mapedGenres","name","slicedMapedGenres","slice","join","Load","color","height","width","timeout","window","scrollTo","top","document","documentElement","scrollHeight","behavior","buttonLoad"],"mappings":"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","file":"static/js/movie-details-view.9198b474.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGoBack\":\"views_buttonGoBack__1sjSH\",\"movieMainInfo\":\"views_movieMainInfo__1854Y\",\"movieInfoHeadingValue\":\"views_movieInfoHeadingValue__3qyTV\",\"moviePoster\":\"views_moviePoster__18MUF\",\"movieInfoAditionanal\":\"views_movieInfoAditionanal__3jXVk\",\"movieInfoAditionanalHeading\":\"views_movieInfoAditionanalHeading__2kYRn\",\"active\":\"views_active__2yB0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieCastList\":\"MovieCast_movieCastList__3TS6O\",\"movieCastItem\":\"MovieCast_movieCastItem__bm878\",\"movieCastItemProfile\":\"MovieCast_movieCastItemProfile__1cl4R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieReviewsList\":\"MovieReviews_movieReviewsList__M-DFy\",\"movieReviewsItemAuthor\":\"MovieReviews_movieReviewsItemAuthor__3LRq3\"};","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ffddee44025dd24685ea61d637d56d24';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nconst getMovieCast = async id => {\n  try {\n    const { data } = await axios.get(`movie/${id}/credits`);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport default getMovieCast;\n\n// https://api.themoviedb.org/3/movie/{movie_id}//credits?api_key=<<api_key>>&language=en-US\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport styles from './MovieCast.module.css';\nimport getMovieCast from '../../services/getMovieCast';\n\nclass MovieCast extends Component {\n  state = {\n    cast: [],\n  };\n  async componentDidMount() {\n    const { movieId } = this.props;\n    const cast = await getMovieCast(movieId);\n    this.setState({ cast: cast });\n  }\n\n  render() {\n    const { cast } = this.state;\n    // console.log(cast);\n\n    return (\n      <ul className={styles.movieCastList}>\n        {cast.map(item => (\n          <li key={item.cast_id} className={styles.movieCastItem}>\n            <h2 className={styles.movieCastItemName}>{item.original_name}</h2>\n            <img\n              className={styles.movieCastItemProfile}\n              src={`https://image.tmdb.org/t/p/w500${item.profile_path}`}\n              alt={item.original_name}\n            />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default withRouter(MovieCast);\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ffddee44025dd24685ea61d637d56d24';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nconst getMovieReviews = async ({ id, page }) => {\n  try {\n    // console.log(id);\n    // console.log(page);\n    const { data } = await axios.get(`movie/${id}/reviews`, {\n      params: { page },\n    });\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport default getMovieReviews;\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport styles from './MovieReviews.module.css';\n\nimport Load from '../Loader';\nimport Button from '../Button';\nimport getMovieReviews from '../../services/getMovieReviews';\n\nclass MovieReviews extends Component {\n  state = {\n    reviews: [],\n    currentPage: 1,\n    totalPages: 1,\n    isLoading: false,\n    error: null,\n  };\n\n  async componentDidMount() {\n    await this.fetchMovieReviews();\n  }\n\n  fetchMovieReviews = () => {\n    const { currentPage } = this.state;\n    const { movieId } = this.props;\n\n    const options = { id: movieId, page: currentPage };\n    this.setState({ isLoading: true });\n\n    getMovieReviews(options)\n      .then(reviews => {\n        this.setState(prevState => ({\n          reviews: [...prevState.reviews, ...reviews.results],\n          totalPages: reviews.total_pages,\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => this.setState({ error: error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { reviews, isLoading, totalPages, currentPage } = this.state;\n    console.log(totalPages);\n\n    return reviews.length > 0 ? (\n      <>\n        <ul className={styles.movieReviewsList}>\n          {reviews.map(item => (\n            <li key={item.id} className={styles.movieReviewsItem}>\n              <span\n                className={styles.movieReviewsItemAuthor}\n              >{` ${item.author}:`}</span>\n              <p className={styles.movieReviewsItemContent}>\n                {`\"${item.content}\"`}\n              </p>\n            </li>\n          ))}\n        </ul>\n        {isLoading && <Load />}\n        {totalPages > 1 && currentPage < totalPages && !isLoading && (\n          <Button onClick={this.fetchMovieReview} />\n        )}\n      </>\n    ) : (\n      <div>There is no any review on this movie</div>\n    );\n  }\n}\n\nexport default withRouter(MovieReviews);\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ffddee44025dd24685ea61d637d56d24';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nconst getMovieDetails = async id => {\n  try {\n    const { data } = await axios.get(`movie/${id}`);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport default getMovieDetails;\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n","import React, { Component } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\n\nimport styles from '../views/views.module.css';\n\nimport routes from '../routes';\nimport MovieCast from '../components/MovieCast';\nimport MovieReviews from '../components/MovieReviews';\nimport getMovieDetails from '../services/getMovieDetails';\nimport cutGenres from '../functions/cutGenres';\n\nclass MovieDetailsView extends Component {\n  state = {\n    poster: '',\n    title: '',\n    release: '',\n    userScores: 0,\n    overview: '',\n    genres: [],\n  };\n\n  static defaultProps = {\n    genresList: [],\n  };\n\n  async componentDidMount() {\n    const { movieId } = this.props.match.params;\n    await getMovieDetails(movieId).then(movieDetails => {\n      // console.log(movieDetails);\n\n      const {\n        poster_path,\n        title,\n        release_date,\n        overview,\n        genres,\n        vote_average,\n      } = movieDetails;\n\n      this.setState({\n        poster: poster_path,\n        title,\n        release: release_date.split('-')[0],\n        overview,\n        genres: cutGenres(genres),\n        userScores: vote_average * 10,\n      });\n    });\n  }\n\n  handleGoBack = () => {\n    const { location, history } = this.props;\n\n    //     if (location.state && location.state.from) {\n    //       return history.push(location.state.from);\n    //  }\n    // history.push(routes.movies);\n    history.push(location?.state?.from || routes.movies);\n  };\n\n  render() {\n    const { poster, title, release, userScores, overview, genres } = this.state;\n    const { movieId } = this.props.match.params;\n\n    return (\n      <>\n        <button\n          type=\"button\"\n          className={styles.buttonGoBack}\n          onClick={this.handleGoBack}\n        >\n          Go back\n        </button>\n        <div className={styles.movieMainInfo}>\n          <img\n            className={styles.moviePoster}\n            src={`https://image.tmdb.org/t/p/w500${poster}`}\n            alt={title}\n          />\n          <div className={styles.movieInfo}>\n            <h2 className={styles.title}>\n              {title}\n              <span className={styles.movieInfoRelease}>\n                {release && ` (${release.split('-')[0]})`}\n              </span>\n            </h2>\n            <p className={styles.movieInfoHeading}>\n              User scores:\n              <span\n                className={styles.movieInfoHeadingValue}\n              >{` ${userScores}%`}</span>\n            </p>\n            <p className={styles.movieInfoHeading}>\n              Genres:\n              <span\n                className={styles.movieInfoHeadingValue}\n              >{` ${genres}`}</span>\n            </p>\n\n            <p className={styles.movieInfoHeading}>\n              Overview:\n              <span\n                className={styles.movieInfoHeadingValue}\n              >{` ${overview}`}</span>\n            </p>\n          </div>\n        </div>\n\n        <div className={styles.movieInfoAditionanal}>\n          Aditional information\n          <p>\n            <NavLink\n              to={{\n                pathname: `/movies/${movieId}/cast`,\n                state: { from: this.props.location },\n              }}\n              className={styles.movieInfoAditionanalHeading}\n              activeClassName={styles.active}\n            >\n              Cast\n            </NavLink>\n          </p>\n          <Route\n            path={`${routes.movieDetails}/cast`}\n            render={props => <MovieCast {...props} movieId={movieId} />}\n          />\n          <p>\n            <NavLink\n              to={{\n                pathname: `/movies/${movieId}/reviews`,\n                state: { from: this.props.location },\n              }}\n              className={styles.movieInfoAditionanalHeading}\n              activeClassName={styles.active}\n            >\n              Reviews\n            </NavLink>\n          </p>\n          <Route\n            path={`${routes.movieDetails}/reviews`}\n            render={props => <MovieReviews {...props} movieId={movieId} />}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default MovieDetailsView;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonLoad\":\"Button_buttonLoad__3AieG\"};","function cutGenres(genres) {\n  const mapedGenres = genres.map(({ name }) => name);\n  // console.log('mapedGenres: ', mapedGenres);\n\n  let slicedMapedGenres = [];\n\n  if (mapedGenres.length < 3) {\n    slicedMapedGenres = mapedGenres;\n  } else {\n    slicedMapedGenres = mapedGenres.slice(0, 2);\n    slicedMapedGenres.push('Other');\n  }\n\n  return slicedMapedGenres.join(', ');\n}\n\nexport default cutGenres;\n","import React, { Component } from 'react';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nclass Load extends Component {\n  render() {\n    return (\n      <Loader\n        type=\"Circles\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        timeout={3000}\n      />\n    );\n  }\n}\n\nexport default Load;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Button.module.css';\n\nclass Button extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n  };\n\n  render() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n    const { onClick } = this.props;\n    return (\n      <button type=\"button\" className={styles.buttonLoad} onClick={onClick}>\n        Load more\n      </button>\n    );\n  }\n}\nexport default Button;\n"],"sourceRoot":""}